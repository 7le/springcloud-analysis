spring:
  application:
    name: spring-cloud-gateway
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        healthCheckPath: /application/health
        healthCheckInterval: 5s
        health-check-critical-timeout: 3m
    loadbalancer:
      retry:
        enabled: true
    bus:
      trace:
        enabled: true
    stream:
      default-binder: rabbit
  zipkin:
    base-url: http://localhost:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: 114.215.122.158
    username: ly
    password:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spring_analysis?useUnicode=true&characterEncoding=utf-8
    username: root
    password: 19960301
    driver-class-name: com.mysql.jdbc.Driver
mybatis:
  mapper-locations: classpath:mapping/*.xml
server:
  port: 2000
  undertow:
    accesslog:
      dir: /logs              # Undertow 日志存放目录
      enabled: true           # 是否启动日志
      pattern: common         # 日志格式
      prefix: access_log      # 日志文件名前缀
      suffix: log             # 日志文件名后缀
    max-http-post-size: 0     # HTTP POST请求最大的大小
    io-threads: 4             # 设置IO线程数，它主要执行非阻塞的任务，它们会负责多个连接，默认设置每个CPU核心一个线程
    worker-threads: 50        # 阻塞任务线程池，当执行类似servlet请求阻塞操作，undertow会从这个线程池中取得线程，它的值设置取决于系统的负载
    buffer-size: 1024         # 以下的配置会影响buffer，这些buffer会用于服务器连接的IO操作,每块buffer的空间大小，越小的空间被利用越充分
    direct-buffers: true      # 是否分配的直接内存
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /application
zuul:
  retryable: true
spring-cloud-ad:
  ribbon:
    ConnectTimeout: 500                 # 请求连接的超时时间
    ReadTimeout:  1000                  # 请求处理的超时时间
    MaxAutoRetries: 2                   # 对当前实例的重试次数
    MaxAutoRetriesNextServer: 1         # 切换实例的重试次数
    OkToRetryOnAllOperations: true      # 对所有操作请求都进行重试